<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="kr.co.igns.business.out.dao.postgre.Out0060Dao">
        
	<!-- 공정외주발주등록 조회 -->
    <select id="getOut0060VO" parameterType="kr.co.igns.business.out.model.out0060.Out0060ReqDto" 
    					       resultType="kr.co.igns.business.out.model.out0060.Out0060VO">
         select 
            
            a.com_code ,
            a.fac_code ,
            a.ord_no ,
            a."no" ,
            a.regi_date ,
            a.ilno ,
            a.part_no ,
            b.part_name ,
            a.qty ,
            a.in_qty ,
            a.make_qty ,
            a.box_qty ,
            a.in_price ,
            a.in_amount ,
            a.rem_qty ,
            a.remark ,
            a.print_type ,
            a.user_flag ,
            a.make_date ,
            a.maker ,
            a.edit_date ,
            a.editor ,
            a.in_status ,
            a.in_type ,
            a.ret_amount 
            
			from mat0012 as a
			join bas0040 as b on a.com_code = b.com_code and a.part_no = b.part_no 
			where 1=1
		     and a.com_code = #{comCode}
		     <if test='facCode != null and !facCode.equals("")'>
		     and a.fac_code = #{facCode}
		     </if>
		   
		     <if test='partNo != null and !partNo.equals("")'>
		     and a.part_no LIKE CONCAT('%', #{partNo}, '%')
		     </if>
		     <if test='regiDate != null and !regiDate.equals("") and endDate != null and !endDate.equals("") '>
		     and a.regi_date BETWEEN #{regiDate} and #{endDate}
		     </if>

 		order by ilno ASC 
 			
    </select>
    
        <select id="geOut0060DVO" parameterType="kr.co.igns.business.out.model.out0060.Out0060ReqDto" 
    					       resultType="kr.co.igns.business.out.model.out0060.Out0060DVO">
			select *,b.part_name 
			from mat0018 a
			join bas0040 b on a.com_code =b.com_code and a.part_no = b.part_no 
		
   		where 1=1
	      and a.ilno = #{ilno}
		 order by no ASC
    </select>
    
    
    <select id="getTransRptHeader" parameterType="java.util.HashMap" resultType="kr.co.igns.business.mat.model.mat0070.TransRptVO">
	with tb_delivery as
	(
		select a.com_code
			 , a.fac_code
			 , a.ilno
			 , a.regi_date
			 , min(b.cust_code)				as cust_code
			 , sum(a.in_amount::numeric) 	as amount
		  from mat0012 a
		  join mat0010 b on a.com_code = b.com_code
		  				and a.ord_no = b.ord_no
		 where a.com_code = #{comCode}
		   and a.fac_code = #{facCode}
		   and a.ilno  = #{ilno}
       
		 group by a.com_code, a.fac_code, a.ilno, a.regi_date
	)
	select a.com_code
		 , a.fac_code
		 , a.ilno
		 , a.regi_date
		 , b.com_name
		 , rpad(b.com_number, 12, ' ')	as com_num
		 , b.name						as ceo_name
		 , b.addr						as com_addr
		 , c.cust_code
		 , c.cust_name
		 , rpad(c.cust_no, 12, ' ')		as cust_num
		 , c.name			as cust_ceo_name
		 , c.addr			as cust_addr
		 , a.amount
		 , a.amount * 0.1 	as vat
		 , a.amount * 1.1 	as total
		 , d.keeper
	  from tb_delivery a
	  join bas0020 b on a.com_code = b.com_code
	  join bas0023 c on a.com_code = c.com_code
	  				and a.cust_code = c.cust_code
	  join (select '(공급자 보관용)' as keeper
  			union
  			select '(공급받는자 보관용)' as keeper) d on 1=1
	 order by a.com_code, a.fac_code, a.ilno, d.keeper desc
    </select>
    
    
    <select id="getTransRptSub" parameterType="java.util.HashMap" resultType="kr.co.igns.business.mat.model.mat0070.TransRptSubVO">
    	 select (ROW_NUMBER() OVER()) AS num
        	  , a.part_no
        	  , b.part_name  
        	    as part_name
        	  , a.in_qty			as qty
        	  , a.box_qty
        	  , a.in_price
        	  , a.in_amount  	 		
           from mat0012 a
           join bas0040 b on a.com_code = b.com_code 
       					 and a.part_no = b.part_no 
          where a.com_code =#{comCode}
            and a.fac_code = #{facCode}
            and a.ilno = #{ilno}
    </select>
    
    
    

    
    
</mapper>