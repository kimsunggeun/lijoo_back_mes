<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="kr.co.igns.business.out.dao.postgre.Out0040Dao">
        
	<!-- 공정외주발주등록 조회 -->
    <select id="getOut0011" parameterType="kr.co.igns.business.out.model.out0040.Out0040ReqDto" 
    					       resultType="kr.co.igns.business.out.model.out0040.Out0040VO">
      select *, (ROW_NUMBER() OVER()) AS num
		from out0011
	   where 1=1
	     and com_code = #{comCode}
	     <if test='custCode != null and !custCode.equals("")'>
	     and cust_code = #{custCode}
	     </if>
	     <if test='partNo != null and !partNo.equals("")'>
	     and part_no LIKE CONCAT('%', #{partNo}, '%')
	     </if>
	     <if test='startDate != null and !startDate.equals("")'>
	     and in_date BETWEEN #{startDate} and #{endDate}
	     </if>
	     <if test='endDate != null and !endDate.equals("")'>
	     and in_date BETWEEN #{startDate} and #{endDate}
	     </if>
    </select>
    
    <insert id="createOut0040" parameterType="kr.co.igns.business.out.model.out0040.Out0040VO">
    	insert into out0012
			 ( com_code
			 , fac_code
			 , in_ilno
			 , in_no
			 , lot_detail
			 , part_no
			 , insp_no
			 , ins_code
			 , ins_type
			 , ins_meth
			 , jug_codeh
			 , ins_unit
			 , ins_base
			 , ins_upp
			 , ins_low
			 , ins_cnt
			 , ins_cnt_no
			 , judge_code
			 , remark
			 , user_flag
			 , make_date
			 , maker
			 )
	   values( #{comCode}
			 , #{facCode}
			 , #{inIlno}
			 , #{inNo}
			 , #{lotDetail}
			 , #{partNo}
			 , #{inspNo}
			 , #{insCode}
			 , #{insType}
             , #{insMeth}
             , #{jugCodeh}
             , #{insUnit}
             , #{insBase}
             , #{insUpp}
             , #{insLow}
             , #{insCnt}
             , #{insCntNo}
             , #{judgeCode}
             , #{remark}
             , #{userFlag}
             , now()
             , #{maker}
             )
    </insert>
    
    <update id="updateOut0040" parameterType="kr.co.igns.business.out.model.out0040.Out0040VO">
    	update out0012
		   set ins_meth   = #{insMeth}
			 , jug_codeh  = #{jugCodeh}
			 , ins_unit   = #{insUnit}
			 , ins_base   = #{insBase}
			 , ins_upp    = #{insUpp}
			 , ins_low    = #{insLow}
			 , ins_cnt    = #{insCnt}
			 , judge_code = #{judgeCode}
			 , remark     = #{remark}
			 , user_flag  = #{userFlag}
			 , make_date  = now()
			 , maker      = #{maker}
			 , edit_date  = now()
			 , editor	  = #{editor}
	 	 where com_code     = #{comCode}
		   and fac_code   = #{facCode}
		   and in_ilno    = #{inIlno}
		   and in_no      = #{inNo}
		   and lot_detail = #{lotDetail}
		   and part_no    = #{partNo}
		   and insp_no    = #{inspNo}
		   and ins_code   = #{insCode}
		   and ins_type   = #{insType}
		   and ins_cnt_no = #{insCntNo}
    </update>
    
    <!-- 거래명세서 -->
    <select id="getTransRptHeader" parameterType="java.util.HashMap" resultType="kr.co.igns.business.mat.model.mat0070.TransRptVO">
	    select	t.com_code
			  , t.fac_code
			  , t.ilno
			  , t.in_date as regi_date
			  , c.cust_name as com_name
			  , rpad(c.cust_no, 12, ' ') as com_num
			  , c.name as ceo_name
			  , c.addr as com_addr
			  , b.com_name as cust_name
			  , rpad(b.com_number, 12, ' ')	as cust_num
			  , b.name as cust_ceo_name
			  , b.addr as cust_addr
			  , t.amount * 0.1 	as vat
			  , t.amount * 1.1 	as total
			  , d.keeper
		from	(
			select a.com_code
				 , a.fac_code
				 , a.cust_code
				 , a.in_ilno as ilno
				 , a.in_date
				 , sum(a.in_amount::numeric) 	as amount
			from out0011 a
			where 1=1
			and a.com_code = #{comCode}
			and a.fac_code = #{facCode}
			and a.in_ilno = #{inIlno}
			group by a.com_code, a.fac_code, a.cust_code, a.in_ilno, a.in_date
		) t
		join bas0020 b on t.com_code = b.com_code
		join bas0023 c on t.com_code = c.com_code and t.cust_code = c.cust_code
		join (select '(공급자 보관용)' as keeper
			  union
			  select '(공급받는자 보관용)' as keeper) d on 1=1
    </select>
    
    <select id="getTransRptSub" parameterType="java.util.HashMap" resultType="kr.co.igns.business.mat.model.mat0070.TransRptSubVO">
    	select (ROW_NUMBER() OVER(order by a.in_no)) AS num
			  , a.part_no
			  , b.part_name  
			  , a.qty
			  , 1 as box_qty
			  , a.in_price
			  , a.in_amount  	 		
		from	out0011 a
		join bas0040 b on a.com_code = b.com_code 
						and a.part_no = b.part_no 
		where a.com_code = #{comCode}
		  and a.fac_code = #{facCode}
		  and a.in_ilno = #{inIlno}
    </select>
    
    <!-- 외주 자재 출고증 출력-->
    <select id="getMatOutputRptHeader" parameterType="java.util.HashMap" resultType="kr.co.igns.business.out.model.out0040.MatOutputRptVO">
    	select	t.com_code
			  , t.fac_code
			  , t.in_ilno
			  , t.lot_detail
			  , t.in_date
			  , b.com_name as cust_name
			  , d.fac_name
			  , c.cust_name as com_name
			  , t.total
		from	(
			select a.com_code
				 , a.fac_code
				 , a.cust_code
				 , a.in_ilno
				 , a.lot_detail
				 , a.in_date
				 , sum(a.qty::int) 	as total
			from out0011 a
			where 1=1
			and a.com_code = #{comCode}
			and a.fac_code = #{facCode}
			and a.in_ilno = #{inIlno}
			group by a.com_code, a.fac_code, a.cust_code, a.in_ilno, a.lot_detail, a.in_date
		) t
		join bas0020 b on t.com_code = b.com_code
		join bas0023 c on t.com_code = c.com_code and t.cust_code = c.cust_code
		join bas0030 d on t.com_code = c.com_code and t.fac_code = d.fac_code
    </select>
    
    <select id="getMatOutputRptSub" parameterType="java.util.HashMap" resultType="kr.co.igns.business.out.model.out0040.MatOutputRptSubVO">
    	select (ROW_NUMBER() OVER(order by a.in_no)) AS num
			  , a.part_no
			  , b.part_name  
			  , a.lot_no 
			  , a.out_lot_detail
			  , a.qty 	 		
		from	out0011 a
		join bas0040 b on a.com_code = b.com_code 
						and a.part_no = b.part_no 
		where a.com_code = #{comCode}
		  and a.fac_code = #{facCode}
		<if test='inIlno != null and !inIlno.equals("")'>
	      and a.in_ilno = #{inIlno}
		</if>
		  
    </select>
</mapper>